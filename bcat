#!/usr/bin/env python
"""
List key-value pairs in files containing bencoded entities.
"""

from bevel import BDict
from bencode.BTL import BTFailure
import sys
import argparse

SEPARATOR = ':'
KEY_SEPARATOR = '.'

if __name__ == '__main__':
	parser = argparse.ArgumentParser(description = __doc__)
	parser.add_argument('--no-filename', '-H', action='store_true', default=False, help='suppress prefixing filenames to results')
	parser.add_argument('--separator', '-s', default=SEPARATOR, help='override default separator (defaults to \''+SEPARATOR+'\')')
	parser.add_argument('--key-separator', '-k', default=KEY_SEPARATOR, help='override default key separator (defaults to \''+KEY_SEPARATOR+'\')')
	parser.add_argument('--print0', '-0', action='store_true', help='use null as line separator')
	parser.add_argument('files', nargs='+')
	args = parser.parse_args()
	for fname in args.files:
		try:
			bdict = BDict(fname, args.key_separator)
		except BTFailure:
			print >> sys.stderr, 'skipping '+fname+' as an invalid bencoded entity...'
			continue
		prefix = '' if args.no_filename else bdict.name+args.separator
		for item in bdict.list():
			sys.stdout.write(prefix+str(item[0])+args.separator+str(item[1])+('\0' if args.print0 else '\n'))
	try:
		sys.stdout.flush()
	except IOError:
		pass
